## YAML Template.
version: '3'
services:
    ## Data base Setup
    db:
        image: mysql/mysql-server:8.0
        restart: always
        environment:
            MYSQL_DATABASE: 'k8s_formation_db'
            MYSQL_USER: 'k8s_formation_user'
            MYSQL_PASSWORD: 'k8s-formation@2021'
            MYSQL_ROOT_PASSWORD: 'k8s-formation@2021'
        ports:
            - "3310:3306"
        expose:
            - "3306"
        volumes:
            - k8s_formation_vlm:/var/lib/mysql
        networks:
            - k8s_formation_ntw

    ## Backend Setup
    server:
        depends_on:
            - db
        image: 'k8s-formation-backend:0.0.1'
        restart: always
        environment:
            server.servlet.context-path: '/test'
            server.port: 8080
            spring.jpa.hibernate.ddl-auto: 'update'
            spring.datasource.platform: 'all'
            spring.datasource.url: 'jdbc:mysql://db:3306/k8s_formation_db?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC'
            spring.datasource.username: 'k8s_formation_user'
            spring.datasource.password: 'k8s-formation@2021'
            spring.datasource.driver-class-name: 'com.mysql.jdbc.Driver'
            spring.jpa.properties.hibernate.dialect: 'org.hibernate.dialect.MySQL55Dialect'
            spring.datasource.sql-script-encoding: 'UTF-8'
            spring.jackson.serialization.fail-on-empty-beans: 'false'
            server.tomcat.max-http-header-size: 512000
            server.tomcat.accesslog.enabled: 'true'
            spring.datasource.tomcat.max-active: 5000
            spring.datasource.tomcat.min-idle: 8

        ports:
            - "9090:8080"
        expose:
            - "8080"
        networks:
            - k8s_formation_ntw

    ## Frontend Setup
    client:
        depends_on:
            - server
        image: 'k8s-formation-frontend:0.0.1'
        restart: always
        expose:
            - "80"
        networks:
            - k8s_formation_ntw

    nginx:
        depends_on:
            - client
        restart: always
        image: k8s-formation-nginx
        ports:
            - '8080:80'
        networks:
            - k8s_formation_ntw

networks:
    k8s_formation_ntw:
volumes:
    k8s_formation_vlm:

